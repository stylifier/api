swagger: "2.0"
info:
  version: "0.0.1"
  title: stylifier-api

host: mock.stylifier.com
basePath: /

schemes:
  - https

consumes:
  - application/json; charset=utf-8
  - application/json

paths:
  /register:
    x-swagger-router-controller: users
    post:
      description: create
      operationId: registerUser
      parameters:
        - name: userInfo
          in: body
          schema:
            $ref: '#/definitions/user_to_create'
      responses:
        "200":
          description: user created
          examples:
              application/json; charset=utf-8:
                {
                  jwt: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJGTHpoZVhFUUc1MVBPeWphV2wwSEllUTVvNWxKYk5mQSJ9.wSqyHgqfwhFey7CirsxCdu9JVMlN8qxLK1oxepFWWfo',
                }

  /login:
    x-swagger-router-controller: users
    post:
      description: login
      operationId: login
      parameters:
        - name: loginInfo
          in: body
          schema:
            $ref: '#/definitions/login_info'
      responses:
        "200":
          description: return jwt if succesfull
          examples:
            application/json; charset=utf-8:
              {
                jwt: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJGTHpoZVhFUUc1MVBPeWphV2wwSEllUTVvNWxKYk5mQSJ9.wSqyHgqfwhFey7CirsxCdu9JVMlN8qxLK1oxepFWWfo',
              }


  /brands:
    x-swagger-router-controller: users
    get:
      description: get
      operationId: getBrands
      parameters:
        - name: q
          in: query
          description: query value to search for, type specified with `in` parameter
          type: string
          x-example: "acme"
        - name: pagination
          in: query
          type: number
      responses:
        "200":
          description: return `allow [ tags ]`
          schema:
            type: array
            items:
              $ref: '#/definitions/users'
          examples:
            application/json; charset=utf-8:
              {
                pagination: "",
                "data": [{
                  "id": "9210dce8-25da-4275-a73a-1383b9774253",
                  "username": "acme",
                  "full_name": "acme",
                  "profile_picture": "https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Logo_acme.svg/1000px-Logo_acme.svg.png",
                }]
              }

  /users:
    x-swagger-router-controller: users
    get:
      description: get
      operationId: getUsers
      parameters:
        - name: q
          in: query
          description: query value to search for, type specified with `in` parameter
          type: string
          x-example: "tom"
        - name: pagination
          in: query
          type: number
      responses:
        "200":
          description: return list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/user_short'
          examples:
            application/json; charset=utf-8:
              {
                pagination: "",
                "data": [{
                  "id": "9210dce8-25da-4275-a73a-1383b9774253",
                  "username": "mockuser",
                  "full_name": "mock user",
                  "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg",
                }]
              }

  '/users/{username}':
    x-swagger-router-controller: users
    get:
      description: get all user images
      operationId: getUserByUsername
      parameters:
        - name: username
          in: path
          required: true
          type: string
      responses:
        "200":
          description: array of users
          schema:
            $ref: '#/definitions/user'
          examples:
            application/json; charset=utf-8:
              {
                "id": "9210dce8-25da-4275-a73a-1383b9774253",
                "username": "mockuser",
                "full_name": "mock user",
                "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg",
                "bio": "Praesent mauris mauris ipsum.",
                "counts": {
                  "follows": 10,
                  "followed_by": 2,
                  "media": 2,
                  "thread_asked_by": 1,
                  "thread_asked_by_open": 0,
                  "sponsored": 0
                },
                "rating": 4,
                "is_instagram_user": false,
                "is_brand": false,
                "styles": ["formal"],
                "sponsors": [{
                  "id": "9210dce8-25da-4275-a73a-1383b9774253",
                  "username": "acme",
                  "full_name": "acme",
                  "profile_picture": "https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Logo_acme.svg/1000px-Logo_acme.svg.png"
                }],
                "created_time": "1515094955466"
              }
  '/users/{username}/followers':
    x-swagger-router-controller: followers
    get:
      description: get
      operationId: getUsersFollowers
      parameters:
        - name: username
          in: path
          required: true
          type: string
        - name: pagination
          in: query
          type: number
        - name: q
          in: query
          type: string
      responses:
        "200":
          description: return list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/user_short'
          examples:
            application/json; charset=utf-8:
              {
                pagination: "",
                "data": [{
                  "id": "9210dce8-25da-4275-a73a-1383b9774253",
                  "username": "mockuser",
                  "full_name": "mock user",
                  "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg",
                }]
              }

  '/users/{username}/follow':
    x-swagger-router-controller: followers
    post:
      description: follow a user
      operationId: createFollow
      parameters:
        - name: username
          in: path
          required: true
          type: string
      responses:
        "200":
          description: success true
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/users/{username}/approve':
    x-swagger-router-controller: users
    post:
      description: approve a user for beta testing
      operationId: approveUser
      parameters:
        - name: username
          in: path
          required: true
          type: string
      responses:
        "200":
          description: success true
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }


  '/users/{username}/sponsor':
    x-swagger-router-controller: sponsors
    post:
      description: ask/accept for sponsorship
      operationId: createSponsor
      parameters:
        - name: body
          in: body
          required: false
          schema:
            type: object
            properties:
              accept:
                type: boolean


        - name: username
          in: path
          required: true
          type: string
      responses:
        "200":
          description: success true
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/users/{username}/sponsors':
    x-swagger-router-controller: sponsors
    get:
      description: get
      operationId: getUsersSponsors
      parameters:
        - name: username
          in: path
          required: true
          type: string
        - name: pagination
          in: query
          type: number
        - name: q
          in: query
          type: string
      responses:
        "200":
          description: return list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/user_short'
          examples:
            application/json; charset=utf-8:
              {
                pagination: "",
                "data": [{
                  "id": "9210dce8-25da-4275-a73a-1383b9774253",
                  "username": "mockuser",
                  "full_name": "mock user",
                  "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg",
                }]
              }

  '/users/{username}/sponsored_by':
    x-swagger-router-controller: sponsors
    get:
      description: get
      operationId: getUsersSponsoredBy
      parameters:
        - name: username
          in: path
          required: true
          type: string
        - name: pagination
          in: query
          type: number
        - name: q
          in: query
          type: string
      responses:
        "200":
          description: return list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/user_short'
          examples:
            application/json; charset=utf-8:
              {
                pagination: "",
                "data": [{
                  "id": "9210dce8-25da-4275-a73a-1383b9774253",
                  "username": "mockuser",
                  "full_name": "mock user",
                  "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg",
                }]
              }

  '/users/{username}/media':
    x-swagger-router-controller: media
    get:
      description: get user recent media
      operationId: getUserMedia
      parameters:
        - name: username
          in: path
          required: true
          type: string
        - name: pagination
          in: query
          type: number

      responses:
        "200":
          description: array of links to images
          schema:
            $ref: '#/definitions/images'
          examples:
            application/json; charset=utf-8:
              {
                "pagination": "",
                "data": [{
                  "id": "d42e0091-2c67-437b-987c-296661c0dc3e",
                  "user": {
                    "id": "9210dce8-25da-4275-a73a-1383b9774253",
                    "username": "acme",
                    "full_name": "acme",
                    "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg"
                  },
                  "images": {
                    "thumbnail" : {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "low_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "standard_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    }
                  },
                  "user_has_liked": false,
                  "likes": 10,
                  "type": image,
                  "users_in_photo": [],
                  "created_time": "2017-12-26T15:54:24.921Z",
                  "location": {
                    "latitude": 60.167,
                    "longitude": 24.955,
                    "name": "Market Square, Helsinki",
                    "id": "504979721",
                  }
                },{
                  "id": "8e0e5bea-f914-492a-8a2b-011bdbae7ae7",
                  "user": {
                    "id": "9210dce8-25da-4275-a73a-1383b9774253",
                    "username": "acme",
                    "full_name": "acme",
                    "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg"
                  },
                  "images": {
                    "thumbnail" : {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "low_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "standard_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    }
                  },
                  "user_has_liked": false,
                  "likes": 10,
                  "type": image,
                  "users_in_photo": [],
                  "created_time": "2017-12-26T15:54:24.921Z",
                  "location": {
                    "latitude": 60.167,
                    "longitude": 24.955,
                    "name": "Market Square, Helsinki",
                    "id": "504979721",
                  }
                }]
              }

  '/media/{media_id}/style/{style}':
    x-swagger-router-controller: media
    post:
      description: assign style to media
      operationId: setStyle
      parameters:
        - name: media_id
          in: path
          required: true
          type: string
        - name: style
          in: path
          required: true
          type: string

      responses:
        "200":
          description: thread created
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/styles':
    x-swagger-router-controller: media
    get:
      description: get top 20 styles
      operationId: getStyles
      parameters:
        - name: q
          in: query
          type: string
      responses:
        "200":
          description: return list of users
          schema:
            type: array
            items:
              type: string
          examples:
            application/json; charset=utf-8:
              ['pepe', 'street']

  '/users/{username}/styles':
    x-swagger-router-controller: media
    get:
      description: get user top 20 styles
      operationId: getUserStyles
      parameters:
        - name: q
          in: query
          type: string
        - name: username
          in: path
          required: true
          type: string
      responses:
        "200":
          description: return list of users
          schema:
            type: array
            items:
              type: string
          examples:
            application/json; charset=utf-8:
              ['pepe', 'street']

  '/user/self/request_approval':
    x-swagger-router-controller: users
    post:
      description: request for approval for beta testing
      operationId: requestApproveUser
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object

      responses:
        "200":
          description: success true
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/user/self/profile_picture':
    x-swagger-router-controller: users
    post:
      description: set users profile picture
      operationId: setProfilePicture
      parameters:
        - name: media
          in: body
          required: true
          schema:
            $ref: '#/definitions/media'

      responses:
        "200":
          description: profile picture has changed
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/user/self':
    x-swagger-router-controller: users
    get:
      description: get all user images
      operationId: getSelfUser
      responses:
        "200":
          description: array of users
          schema:
            $ref: '#/definitions/user'
          examples:
            application/json; charset=utf-8:
              {
                "id": "9210dce8-25da-4275-a73a-1383b9774253",
                "username": "mockuser",
                "full_name": "mock user",
                "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg",
                "bio": "Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.

                Curabitur sodales ligula in libero. Sed dignissim lacinia nunc. Curabitur tortor. Pellentesque nibh. Aenean quam. In scelerisque sem at dolor. Maecenas mattis. Sed convallis tristique sem. Proin ut ligula vel nunc egestas porttitor. Morbi lectus risus, iaculis vel, suscipit quis, luctus non, massa. Fusce ac turpis quis ligula lacinia aliquet. Mauris ipsum.",
                "counts": {
                  "follows": 10,
                  "followed_by": 2,
                  "media": 2,
                  "thread_asked_by": 1,
                  "thread_asked_by_open": 0,
                  "sponsored": 0
                },
                "rating": 4,
                "is_instagram_user": false,
                "is_brand": false,
                "styles": ["formal"],
                "sponsors": [{
                  "id": "9210dce8-25da-4275-a73a-1383b9774253",
                  "username": "acme",
                  "full_name": "acme",
                  "profile_picture": "https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Logo_acme.svg/1000px-Logo_acme.svg.png"
                }],
                "created_time": "1515094955466"
              }
  '/feeds':
    x-swagger-router-controller: media
    get:
      description: get user recent feeds
      operationId: getFeeds
      parameters:
        - name: from
          in: query
          description: feeds from date
          required: false
          type: string
          default: '2017-12-30T11:15:25.038Z'
        - name: pagination
          in: query
          type: number

      responses:
        "200":
          description: array of links to images
          schema:
            $ref: '#/definitions/media_list'
          examples:
            application/json; charset=utf-8:
              {
                "pagination": "123456",
                "data": [{
                  "id": "d42e0091-2c67-437b-987c-296661c0dc3e",
                  "user": {
                    "id": "9210dce8-25da-4275-a73a-1383b9774253",
                    "username": "acme",
                    "full_name": "acme",
                    "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg"
                  },
                  "images": {
                    "thumbnail" : {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "low_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "standard_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    }
                  },
                  "user_has_liked": false,
                  "likes": 10,
                  "type": image,
                  "users_in_photo": [],
                  "created_time": "2017-12-26T15:54:24.921Z",
                  "location": {
                    "latitude": 60.167,
                    "longitude": 24.955,
                    "name": "Market Square, Helsinki",
                    "id": "504979721",
                  }
                },{
                  "id": "8e0e5bea-f914-492a-8a2b-011bdbae7ae7",
                  "user": {
                    "id": "9210dce8-25da-4275-a73a-1383b9774253",
                    "username": "acme",
                    "full_name": "acme",
                    "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg"
                  },
                  "images": {
                    "thumbnail" : {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "low_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "standard_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    }
                  },
                  "user_has_liked": false,
                  "likes": 10,
                  "type": image,
                  "users_in_photo": [],
                  "created_time": "2017-12-26T15:54:24.921Z",
                  "location": {
                    "latitude": 60.167,
                    "longitude": 24.955,
                    "name": "Market Square, Helsinki",
                    "id": "504979721",
                  }
                }]
              }

  '/self_media':
    x-swagger-router-controller: media
    get:
      description: get all user media
      operationId: getSelfMedia
      parameters:
        - name: pagination
          in: query
          type: number
      responses:
        "200":
          description: array of links to images
          schema:
            $ref: '#/definitions/media_list'
          examples:
            application/json; charset=utf-8:
              {
                "pagination": "",
                "data": [{
                  "id": "d42e0091-2c67-437b-987c-296661c0dc3e",
                  "user": {
                    "id": "9210dce8-25da-4275-a73a-1383b9774253",
                    "username": "acme",
                    "full_name": "acme",
                    "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg"
                  },
                  "images": {
                    "thumbnail" : {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "low_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "standard_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    }
                  },
                  "user_has_liked": false,
                  "likes": 10,
                  "type": image,
                  "users_in_photo": [],
                  "created_time": "2017-12-26T15:54:24.921Z",
                  "location": {
                    "latitude": 60.167,
                    "longitude": 24.955,
                    "name": "Market Square, Helsinki",
                    "id": "504979721",
                  }
                }]
              }

  '/media':
    x-swagger-router-controller: media

    get:
      description: search media
      operationId: getMedia
      parameters:
        - name: pagination
          in: query
          type: number
        - name: q
          in: query
          type: string
      responses:
        "200":
          description: array of links to images
          schema:
            $ref: '#/definitions/media_list'
          examples:
            application/json; charset=utf-8:
              {
                "pagination": "",
                "data": [{
                  "id": "d42e0091-2c67-437b-987c-296661c0dc3e",
                  "user": {
                    "id": "9210dce8-25da-4275-a73a-1383b9774253",
                    "username": "acme",
                    "full_name": "acme",
                    "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg"
                  },
                  "images": {
                    "thumbnail" : {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "low_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    },
                    "standard_resolution": {
                      "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                      "width": 640,
                      "height": 480
                    }
                  },
                  "user_has_liked": false,
                  "likes": 10,
                  "type": image,
                  "users_in_photo": [],
                  "created_time": "2017-12-26T15:54:24.921Z",
                  "location": {
                    "latitude": 60.167,
                    "longitude": 24.955,
                    "name": "Market Square, Helsinki",
                    "id": "504979721",
                  }
                }]
              }

    post:
      description: upload new image
      operationId: createMedia
      consumes:
        - multipart/form-data
      responses:
        "200":
          description: Object of the image
          schema:
            $ref: '#/definitions/image'
          examples:
            application/json; charset=utf-8:
              {
                "success": true,
                "id": "1210dce8-25da-4275-a73a-1383b9774255"
              }

  '/threads':
    x-swagger-router-controller: threads
    get:
      description: get all user's threads
      operationId: getSelfThreads
      parameters:
        - name: pagination
          in: query
          type: number
        - name: q
          in: query
          description: query value to search for
          type: string
          x-example: "tom"
      responses:
        "200":
          description: array of threads
          schema:
            $ref: '#/definitions/threads'
          examples:
            application/json; charset=utf-8:
              {
                "pagination": "",
                "data": [{
                  "id": "d42e0091-2c67-437b-987c-296661c0dc3e",
                  "status": "REQUESTED",
                  "from": {
                    "id": "9210dce8-25da-4275-a73a-1383b9774253",
                    "username": "acme",
                    "full_name": "acme",
                    "profile_picture": "https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Logo_acme.svg/1000px-Logo_acme.svg.png"
                  },
                  "to": {
                    "id": "9210dce8-25da-4275-a73a-1383b9774253",
                    "username": "mockuser",
                    "full_name": "mock user",
                    "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg",
                  },
                  "created_time": 1515096742249
                },{
                  "id": "d42e0091-2c67-437b-987c-296661c0dc0e",
                  "status": "REQUESTED",
                  "from": {
                    "id": "9214dce8-25da-4275-a73a-1383b9774253",
                    "username": "acme",
                    "full_name": "acme",
                    "profile_picture": "https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Logo_acme.svg/1000px-Logo_acme.svg.png"
                  },
                  "to": {
                    "id": "9219dce8-25da-4275-a73a-1383b9774253",
                    "username": "mockuser",
                    "full_name": "mock user",
                    "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg",
                  },
                  "created_time": 1515096742249
                }]
              }
    post:
      description: create a new thread
      operationId: createThread
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/thread'

      responses:
        "200":
          description: thread created
          examples:
            application/json; charset=utf-8:
              {
                "id": "9210dce8-25da-4275-a73a-1383b9774255",
                "success": true
              }

  '/threads/{thread_id}/media':
    x-swagger-router-controller: threads
    put:
      description: add media to the thread
      operationId: addMediaThread
      parameters:
        - name: thread_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              media:
                type: array
                items:
                  $ref: '#/definitions/media'

      responses:
        "200":
          description: media added
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/threads/{thread_id}/close':
    x-swagger-router-controller: threads
    post:
      description: close the thread
      operationId: closeThread
      parameters:
        - name: thread_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/threadRating"

      responses:
        "200":
          description: thread created
          examples:
            application/json; charset=utf-8:
              {
                "id": "9210dce8-25da-4275-a73a-1383b9774255",
                "success": true
              }

  '/media/{media_id}/share':
    x-swagger-router-controller: media
    post:
      description: share media on requester profile
      operationId: shareMedia
      parameters:
        - name: media_id
          in: path
          required: true
          type: string

      responses:
        "200":
          description: media shared
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/media/{media_id}/description':
    x-swagger-router-controller: media
    post:
      description: add description to media
      operationId: addDescriptionToMedia
      parameters:
        - name: media_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              description:
                type: string

      responses:
        "200":
          description: media shared

  '/color_pallets/{palletId}':
    x-swagger-router-controller: colorPallets
    post:
      description: bookmark a color pallet
      operationId: createColorPalletBookmart
      parameters:
        - name: palletId
          in: path
          required: true
          type: string
        - name: title
          in: query
          type: string

      responses:
        "200":
          description: color has bookmarked

    delete:
      description: delete bookmarked a color pallet
      operationId: deleteColorPalletBookmart
      parameters:
        - name: palletId
          in: path
          required: true
          type: string

      responses:
        "200":
          description: bookmarked pallet deleted

  '/color_pallets_bookmarks':
    x-swagger-router-controller: colorPallets
    get:
      description: get users color pallet bookmart
      operationId: getUsersColorPalletBookmart
      parameters:
        - name: pagination
          in: query
          type: number

      responses:
        "200":
          description: color has bookmarked

  '/color_pallets':
    x-swagger-router-controller: colorPallets
    post:
      description: register a color pallet
      operationId: createColorPallet
      parameters:
        - name: colorPallet
          in: body
          required: true
          schema:
            $ref: "#/definitions/colorPallet"

      responses:
        "200":
          description: color pallet created
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

    get:
      description: get color pallet suggestion
      operationId: getCollorPalletSuggestion
      parameters:
        - name: color_code
          in: query
          required: true
          type: string
          pattern: '^#(?:[0-9a-fA-F]{3}){1,2}$'

      responses:
        "200":
          description: color pallet suggestions
          schema:
            $ref: '#/definitions/colorPallets'


  '/color_codes':
    x-swagger-router-controller: colorPallets
    get:
      description: get color code matching
      operationId: getColorCodes

      responses:
        "200":
          description: array of color codes

  '/subscriptions/{subscription_id}':
    x-swagger-router-controller: subscriptions
    post:
      description: register the subscription
      operationId: createSubscription
      parameters:
        - name: subscription_id
          in: path
          required: true
          type: string

      responses:
        "200":
          description: subscription created
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

    delete:
      description: delete the subscription
      operationId: deleteSubscription
      parameters:
        - name: subscription_id
          in: path
          required: true
          type: string

      responses:
        "200":
          description: subscription deleted
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/threads/{thread_id}/messages':
    x-swagger-router-controller: messages
    get:
      description: get a thread messages
      operationId: getMessages
      parameters:
        - name: thread_id
          in: path
          required: true
          type: string
        - name: pagination
          in: query
          type: number
      responses:
        "200":
          description: array of messages
          schema:
            $ref: '#/definitions/messages'
          examples:
            application/json; charset=utf-8:
              {
                pagination: '',
                data: [{
                  "text": "hi",
                  "status": "DELIVERED",
                  "id": "9210dce8-25da-4275-a73a-1383b9774255",
                  "thread_id": "9210dce8-25da-4275-a73a-1383b9774255",
                  "media": [{
                    "id": "d42e0091-2c67-437b-987c-296661c0dc3e",
                    "user": {
                      "id": "9210dce8-25da-4275-a73a-1383b9774253",
                      "username": "acme",
                      "full_name": "acme",
                      "profile_picture": "https://mock.stylifier.com/images/9210dce8-25da-4275-a73a-1383b9774253.jpeg"
                    },
                    "images": {
                      "thumbnail" : {
                        "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                        "width": 640,
                        "height": 480
                      },
                      "low_resolution": {
                        "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                        "width": 640,
                        "height": 480
                      },
                      "standard_resolution": {
                        "url": "https://mock.stylifier.com/images/d42e0091-2c67-437b-987c-296661c0dc3e.jpeg",
                        "width": 640,
                        "height": 480
                      }
                    },
                    "user_has_liked": false,
                    "likes": 10,
                    "type": image,
                    "users_in_photo": [],
                    "created_time": "2017-12-26T15:54:24.921Z",
                    "location": {
                      "latitude": 60.167,
                      "longitude": 24.955,
                      "name": "Market Square, Helsinki",
                      "id": "504979721",
                    }
                  }],
                  "created_time": ""
                }]
              }
    put:
      description: create a message
      operationId: createMessage
      parameters:
        - name: thread_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/message"

      responses:
        "204":
          description: successfully created

  '/campaigns':
    x-swagger-router-controller: campaigns
    get:
      description: get top 6 campaigns
      operationId: getCampaigns
      responses:
        "200":
          description: array of campaigns
          schema:
            $ref: '#/definitions/campaigns'

    post:
      description: create a new campaign
      operationId: createCampaign
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/campaign'

      responses:
        "200":
          description: thread created
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/self_campaigns':
    x-swagger-router-controller: campaigns
    get:
      description: get self campaigns
      operationId: getSelfCampaigns
      responses:
        "200":
          description: array of campaigns
          schema:
            $ref: '#/definitions/campaigns'

  '/addresses':
    x-swagger-router-controller: addresses
    get:
      description: get all addresses
      operationId: getAddresses
      responses:
        "200":
          description: array of addresses
          schema:
            $ref: '#/definitions/addresses'

    post:
      description: create a new address
      operationId: createAddress
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/address'

      responses:
        "200":
          description: address created
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/addresses/{id}':
    x-swagger-router-controller: addresses

    delete:
      description: delete an address
      operationId: deleteAddress
      parameters:
        - name: id
          in: path
          required: true
          type: string

      responses:
        "200":
          description: address deleted
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/users/{username}/products':
    x-swagger-router-controller: products
    get:
      description: get top 10 products
      operationId: getUserProducts
      parameters:
        - name: username
          in: path
          required: true
          type: string
        - name: pagination
          in: query
          type: number
        - name: name
          in: query
          required: false
          type: string
        - name: brand
          in: query
          required: false
          type: string
        - name: color
          in: query
          required: false
          type: string
        - name: sub_color
          in: query
          required: false
          type: string
        - name: category
          in: query
          required: false
          type: string
        - name: hex
          in: query
          required: false
          type: string
          pattern: '^#[0-9a-f]{3,6}$'
      responses:
        "200":
          description: array of products
          schema:
            $ref: '#/definitions/products'

  '/products':
    x-swagger-router-controller: products
    get:
      description: get top 10 products
      operationId: getSelfProducts
      parameters:
        - name: pagination
          in: query
          type: number
        - name: name
          in: query
          required: false
          type: string
        - name: brand
          in: query
          required: false
          type: string
        - name: color
          in: query
          required: false
          type: string
        - name: sub_color
          in: query
          required: false
          type: string
        - name: category
          in: query
          required: false
          type: string
        - name: hex
          in: query
          required: false
          type: string
          pattern: '^#[0-9a-f]{3,6}$'
      responses:
        "200":
          description: array of products
          schema:
            $ref: '#/definitions/products'

    post:
      description: create a new products
      operationId: createProduct
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/product'

      responses:
        "200":
          description: product created
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/product/{productId}/bookmark':
    x-swagger-router-controller: products
    post:
      description: bookmark a product
      operationId: createProductBookmart
      parameters:
        - name: productId
          in: path
          required: true
          type: string
        - name: pallet_id
          in: query
          required: false
          type: string
        - name: title
          in: query
          type: string

      responses:
        "200":
          description: product has bookmarked

    delete:
      description: delete bookmarked a product
      operationId: deleteProductBookmart
      parameters:
        - name: productId
          in: path
          required: true
          type: string
        - name: pallet_id
          in: query
          required: false
          type: string

      responses:
        "200":
          description: bookmarked product deleted

  '/product_bookmarks':
    x-swagger-router-controller: products
    get:
      description: get users product bookmart
      operationId: getUsersProductBookmart
      parameters:
        - name: pagination
          in: query
          type: number

      responses:
        "200":
          description: color has bookmarked

  '/product_categories':
    x-swagger-router-controller: products
    get:
      description: get all available categories
      operationId: getProductCategories

      responses:
        "200":
          description: array of categories

  '/order-item/{id}':
    x-swagger-router-controller: orders

    delete:
      description: delete an order item
      operationId: deleteOrderItem
      parameters:
        - name: id
          in: path
          required: true
          type: string

      responses:
        "200":
          description: address deleted
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/orders':
    x-swagger-router-controller: orders
    get:
      description: get all orders
      operationId: getOrders
      parameters:
        - name: status
          in: query
          required: false
          type: string
      responses:
        "200":
          description: array of orders
          schema:
            $ref: '#/definitions/orders'

    put:
      description: add an order
      operationId: addOrder
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/product'

      responses:
        "200":
          description: order added
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/orders/close':
    x-swagger-router-controller: orders

    post:
      description: close open orders
      operationId: closeOrders
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              orders:
                $ref: '#/definitions/orders'
              address:
                $ref: '#/definitions/address'
              payment_token:
                $ref: '#/definitions/payment_token'

      responses:
        "200":
          description: orders closed
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/orders/{id}/close':
    x-swagger-router-controller: orders

    post:
      description: close an open order
      operationId: closeOrder
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/address'

        - name: id
          in: path
          required: true
          type: string

      responses:
        "200":
          description: order closed
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  '/orders/{id}/status/{status}':
    x-swagger-router-controller: orders

    post:
      description: set order status
      operationId: setOrderStatus

      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: status
          in: path
          required: true
          type: string

      responses:
        "200":
          description: order status set
          examples:
            application/json; charset=utf-8:
              {
                "success": true
              }

  /swagger:
    x-swagger-pipe: swagger_raw

definitions:
  id:
    type: string

  login_info:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
     - username
     - password

  user_to_create:
    type: object
    allOf:
      - $ref: '#/definitions/user_short'
      - type: object
        properties:
          email:
            type: string
          password:
            type: string
          instagram_code:
            type: string

  style:
    type: string

  user_short:
    type: object
    properties:
      id:
        $ref: '#/definitions/id'
      username:
        type: string
      full_name:
        type: string
      profile_picture:
        type: string

  user:
    allOf:
      - $ref: '#/definitions/user_short'
      - type: object
        properties:
          bio:
            type: string
          counts:
            type: object
            properties:
              follows:
                type: number
              followed_by:
                type: number
              media:
                type: number
              thread_asked_by:
                type: number
              thread_asked_by_open:
                type: number
              sponsored:
                type: number
          contribution_earned:
            type: number
          rating:
            type: number
          request_rating:
            type: number
          is_instagram_user:
            type: boolean
          is_brand:
            type: boolean
          styles:
            type: array
            items:
              $ref: '#/definitions/style'
          sponsors:
            type: array
            items:
              $ref: '#/definitions/user_short'
          created_time:
            type: string

  users:
    type: object
    properties:
      pagination:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/user'

  campaign:
    type: object
    properties:
      description:
        type: string
      user:
        $ref: '#/definitions/user'
      location:
        $ref: '#/definitions/location'
      media:
        $ref: '#/definitions/media'
      created_time:
        type: string

  campaigns:
    type: array
    items:
      $ref: '#/definitions/campaign'


  product:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
      price:
        type: object
        properties:
          original:
            type: string
          promotional:
            type: string
      user:
        $ref: '#/definitions/user'
      media:
        type: array
        items:
          $ref: '#/definitions/images'
      sizes:
        type: string
      externalURL:
        type: string
      brand:
        type: string
      category:
        type: string
      color:
        type: string
      subColor:
        type: string
      colorPallet:
        type: string
      created_time:
        type: string


  products:
    type: array
    items:
      $ref: '#/definitions/product'

  message:
    type: object
    properties:
      text:
        type: string
      status:
        type: string
        enum:
          - DELIVERED
          - SENT
          - SEEN
      id:
        $ref: '#/definitions/id'
      thread_id:
        $ref: '#/definitions/id'
      media:
        type: array
        items:
          $ref: '#/definitions/media'
      created_time:
        type: string

  messages:
    type: object
    properties:
      pagination:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/message'

  thread:
    type: object
    properties:
      id:
        $ref: '#/definitions/id'
      status:
        type: string
        enum:
          - REQUESTED
          - OPENED
          - RATING
          - CLOSED
      from:
        $ref: '#/definitions/user_short'
      to:
        $ref: '#/definitions/user_short'
      created_time:
        type: string

  threads:
    type: object
    properties:
      pagination:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/thread'

  threadRating:
    type: object
    properties:
      rating:
        type: number
      review:
        type: string

  media:
    type: object
    properties:
      id:
        $ref: '#/definitions/id'
      user:
        $ref: '#/definitions/user_short'
      images:
        $ref: '#/definitions/image'
      user_has_liked:
        type: boolean
      likes:
        type: number
      type:
        type: string
        enum:
          - image
      users_in_photo:
        type: array
        items:
          $ref: '#/definitions/user'
      created_time:
        type: string

  location:
    type: object
    properties:
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      id:
        type: string

  address:
    type: object
    properties:
      id:
        type: string
      street:
        type: string
      postalCode:
        type: number
      city:
        type: string
      country:
        type: string

  addresses:
    type: array
    items:
      $ref: '#/definitions/addresses'

  item:
    type: object
    properties:
      status:
        type: string
      product:
        $ref: '#/definitions/product'

  items:
    type: array
    items:
      $ref: '#/definitions/item'

  order:
    type: object
    properties:
      status:
        type: string
      user:
        $ref: '#/definitions/user'
      items:
        $ref: '#/definitions/items'

  orders:
    type: array
    items:
      $ref: '#/definitions/order'

  image:
    type: object
    properties:
      width:
        type: number
      height:
        type: number
      url:
        type: string

  images:
    type: object
    properties:
      thumbnail:
        $ref: '#/definitions/image'
      low_resolution:
        $ref: '#/definitions/image'
      standard_resolution:
        $ref: '#/definitions/image'

  media_list:
    type: object
    properties:
      pagination:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/media'

  payment_token:
    type: object
    properties:
      card:
        type: object
      client_ip:
        type: string
      id:
        type: string
      livemode:
        type: boolean
      used:
        type: boolean
      object:
        type: string
      type:
        type: string

  colorPallet:
    type: object
    properties:
      id:
        type: string
      code:
        type: string
      likes:
        type: string
      popularity:
        type: number

  colorPallets:
    type: array
    items:
      $ref: '#/definitions/colorPallet'
